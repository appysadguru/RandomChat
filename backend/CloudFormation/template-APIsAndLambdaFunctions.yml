# yet to add comments

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Resources:
  APIMessages:
    Type: AWS::Serverless::Api
    Properties:
      Name: RandomChat-Messages
      Description: APIs connected to Lambda functions that interact with DynamoDB RandomChat-Messages table
      StageName: dev
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Auth:
        Authorizers:
          CognitoAuthorizerMessages:
            UserPoolArn: !ImportValue RandomChatCognitoUserPoolUserARN
        DefaultAuthorizer: CognitoAuthorizerMessages
        AddDefaultAuthorizerToCorsPreflight: false
      EndpointConfiguration:
        Type: REGIONAL

  PostMessages:
    Type: AWS::Serverless::Function
    Properties:
      Handler: PostMessages.handler
      Runtime: nodejs16.x
      MemorySize: 128
      Timeout: 3
      FunctionName: RandomChat-PostMessages
      AutoPublishAlias: RandomChatPostMessagesAlias
      Description: Creates a record in DynamoDB RandomChat-Messages table. Invoked by POST method
      Layers:
        - !ImportValue RandomChatAWSSDKv3ClientDynamoDBLayerARN
      Policies:
          - Version: "2012-10-17"
            Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:BatchGetItem"
                - "dynamodb:BatchWriteItem"
                - "dynamodb:ConditionCheckItem"
                - "dynamodb:PutItem"
                - "dynamodb:DescribeTable"
                - "dynamodb:DeleteItem"
                - "dynamodb:GetItem"
                - "dynamodb:Scan"
                - "dynamodb:Query"
                - "dynamodb:UpdateItem"
              Resource: '*'
      CodeUri: ../Lambda/Functions/PostMessages.js
      DeploymentPreference:
          Type: AllAtOnce
          Hooks:
            PostTraffic: !Ref PostMessagesTest
      Events:
        APIMessagesPostEvent:
          Type: Api
          Properties:
            Path: /
            Method: post
            RestApiId: 
              Ref: APIMessages

  PostMessagesTest:
    Type: AWS::Serverless::Function
    Properties:
      Handler: PostMessagesTest.handler
      Description: Performs validation tests for RandomChat-PostMessages Lambda function
      Policies:
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
            Resource:
              !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "lambda:InvokeFunction"
            Resource: !Ref PostMessages.Version
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "dynamodb:BatchGetItem"
              - "dynamodb:BatchWriteItem"
              - "dynamodb:ConditionCheckItem"
              - "dynamodb:PutItem"
              - "dynamodb:DescribeTable"
              - "dynamodb:DeleteItem"
              - "dynamodb:GetItem"
              - "dynamodb:Scan"
              - "dynamodb:Query"
              - "dynamodb:UpdateItem"
            Resource: '*'
      Runtime: nodejs16.x
      FunctionName: 'CodeDeployHook_PostMessagesTest'
      CodeUri: ../Lambda/Functions/PostMessagesTest.js
      Layers:
        - !ImportValue RandomChatAWSSDKv3ClientDynamoDBLayerARN
      DeploymentPreference:
        Enabled: false
      Environment:
        Variables:
          NewVersion: !Ref PostMessages.Version

  GetMessages:
    Type: AWS::Serverless::Function
    Properties:
      Handler: GetMessages.handler
      Runtime: nodejs16.x
      MemorySize: 128
      Timeout: 3
      FunctionName: RandomChat-GetMessages
      AutoPublishAlias: RandomChatGetMessagesAlias
      Description: Gets the items from DynamoDB RandomChat-Messages table. Invoked by GET method
      Layers:
        - !ImportValue RandomChatAWSSDKv3ClientDynamoDBLayerARN
      Policies:
          - Version: "2012-10-17"
            Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:BatchGetItem"
                - "dynamodb:BatchWriteItem"
                - "dynamodb:ConditionCheckItem"
                - "dynamodb:PutItem"
                - "dynamodb:DescribeTable"
                - "dynamodb:DeleteItem"
                - "dynamodb:GetItem"
                - "dynamodb:Scan"
                - "dynamodb:Query"
                - "dynamodb:UpdateItem"
              Resource: '*'
      CodeUri: ../Lambda/Functions/GetMessages.js
      DeploymentPreference:
          Type: AllAtOnce
          Hooks:
            PostTraffic: !Ref GetMessagesTest
      Events:
        APIMessagesGetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId: 
              Ref: APIMessages
  
  GetMessagesTest:
    Type: AWS::Serverless::Function
    Properties:
      Handler: GetMessagesTest.handler
      Description: Performs validation tests for RandomChat-GetMessages Lambda function
      Policies:
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
            Resource:
              !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "lambda:InvokeFunction"
            Resource: !Ref GetMessages.Version
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "dynamodb:BatchGetItem"
              - "dynamodb:BatchWriteItem"
              - "dynamodb:ConditionCheckItem"
              - "dynamodb:PutItem"
              - "dynamodb:DescribeTable"
              - "dynamodb:DeleteItem"
              - "dynamodb:GetItem"
              - "dynamodb:Scan"
              - "dynamodb:Query"
              - "dynamodb:UpdateItem"
            Resource: '*'
      Runtime: nodejs16.x
      FunctionName: 'CodeDeployHook_GetMessagesTest'
      CodeUri: ../Lambda/Functions/GetMessagesTest.js
      Layers:
        - !ImportValue RandomChatAWSSDKv3ClientDynamoDBLayerARN
      DeploymentPreference:
        Enabled: false
      Environment:
        Variables:
          NewVersion: !Ref GetMessages.Version
  
  APIFriends:
    Type: AWS::Serverless::Api
    Properties:
      Name: RandomChat-Friends
      Description: APIs connected to Lambda functions that interact with DynamoDB RandomChat-Friends table
      StageName: dev
      Cors:
        AllowMethods: "'POST, GET'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Auth:
        Authorizers:
          CognitoAuthorizerFriends:
            UserPoolArn: !ImportValue RandomChatCognitoUserPoolUserARN
        DefaultAuthorizer: CognitoAuthorizerFriends
        AddDefaultAuthorizerToCorsPreflight: false
      EndpointConfiguration:
        Type: REGIONAL

  PostFriends:
    Type: AWS::Serverless::Function
    Properties:
      Handler: PostFriends.handler
      Description: //
      Runtime: nodejs16.x
      MemorySize: 128
      Timeout: 3
      FunctionName: RandomChat-PostFriends
      AutoPublishAlias: RandomChatPostFriendsAlias
      Description: Creates a record in the DynamoDB RandomChat-Friends table. Invoked by POST method
      Layers:
        - !ImportValue RandomChatAWSSDKv3ClientDynamoDBLayerARN
      Policies:
          - Version: "2012-10-17"
            Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:BatchGetItem"
                - "dynamodb:BatchWriteItem"
                - "dynamodb:ConditionCheckItem"
                - "dynamodb:PutItem"
                - "dynamodb:DescribeTable"
                - "dynamodb:DeleteItem"
                - "dynamodb:GetItem"
                - "dynamodb:Scan"
                - "dynamodb:Query"
                - "dynamodb:UpdateItem"
              Resource: '*'
      CodeUri: ../Lambda/Functions/PostFriends.js
      DeploymentPreference:
          Type: AllAtOnce
          Hooks:
            PostTraffic: !Ref PostFriendsTest
      Events:
        APIMessagesGetEvent:
          Type: Api
          Properties:
            Path: /
            Method: post
            RestApiId: 
              Ref: APIFriends
  
  PostFriendsTest:
    Type: AWS::Serverless::Function
    Properties:
      Handler: PostFriendsTest.handler
      Description: Performs validation tests for RandomChat-PostFriends Lambda function
      Policies:
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
            Resource:
              !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "lambda:InvokeFunction"
            Resource: !Ref PostFriends.Version
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "dynamodb:BatchGetItem"
              - "dynamodb:BatchWriteItem"
              - "dynamodb:ConditionCheckItem"
              - "dynamodb:PutItem"
              - "dynamodb:DescribeTable"
              - "dynamodb:DeleteItem"
              - "dynamodb:GetItem"
              - "dynamodb:Scan"
              - "dynamodb:Query"
              - "dynamodb:UpdateItem"
            Resource: '*'
      Runtime: nodejs16.x
      FunctionName: 'CodeDeployHook_PostFriendsTest'
      CodeUri: ../Lambda/Functions/PostFriendsTest.js
      Layers:
        - !ImportValue RandomChatAWSSDKv3ClientDynamoDBLayerARN
      DeploymentPreference:
        Enabled: false
      Environment:
        Variables:
          NewVersion: !Ref PostFriends.Version

  GetFriends:
    Type: AWS::Serverless::Function
    Properties:
      Handler: GetFriends.handler
      Runtime: nodejs16.x
      MemorySize: 128
      Timeout: 3
      FunctionName: RandomChat-GetFriends
      AutoPublishAlias: RandomChatGetFriendsAlias
      Description: Gets the items from DynamoDB RandomChat-Friends table. Invoked by GET method
      Layers:
        - !ImportValue RandomChatAWSSDKv3ClientDynamoDBLayerARN
      Policies:
          - Version: "2012-10-17"
            Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:BatchGetItem"
                - "dynamodb:BatchWriteItem"
                - "dynamodb:ConditionCheckItem"
                - "dynamodb:PutItem"
                - "dynamodb:DescribeTable"
                - "dynamodb:DeleteItem"
                - "dynamodb:GetItem"
                - "dynamodb:Scan"
                - "dynamodb:Query"
                - "dynamodb:UpdateItem"
              Resource: '*'
      CodeUri: ../Lambda/Functions/GetFriends.js
      DeploymentPreference:
          Type: AllAtOnce
          Hooks:
            PostTraffic: !Ref GetFriendsTest
      Events:
        APIMessagesGetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
            RestApiId: 
              Ref: APIFriends
  
  GetFriendsTest:
    Type: AWS::Serverless::Function
    Properties:
      Handler: GetFriendsTest.handler
      Description: Performs validation tests for RandomChat-GetFriends Lambda function
      Policies:
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "codedeploy:PutLifecycleEventHookExecutionStatus"
            Resource:
              !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement: 
          - Effect: "Allow"
            Action: 
              - "lambda:InvokeFunction"
            Resource: !Ref GetFriends.Version
        - Version: "2012-10-17"
          Statement:
          - Effect: "Allow"
            Action:
              - "dynamodb:BatchGetItem"
              - "dynamodb:BatchWriteItem"
              - "dynamodb:ConditionCheckItem"
              - "dynamodb:PutItem"
              - "dynamodb:DescribeTable"
              - "dynamodb:DeleteItem"
              - "dynamodb:GetItem"
              - "dynamodb:Scan"
              - "dynamodb:Query"
              - "dynamodb:UpdateItem"
            Resource: '*'
      Runtime: nodejs16.x
      FunctionName: 'CodeDeployHook_GetFriendsTest'
      CodeUri: ../Lambda/Functions/GetFriendsTest.js
      Layers:
        - !ImportValue RandomChatAWSSDKv3ClientDynamoDBLayerARN
      DeploymentPreference:
        Enabled: false
      Environment:
        Variables:
          NewVersion: !Ref GetFriends.Version

Outputs:
  MessagesOutput:
    Description: API URL for Lambda functions dealing with DynamoDB RandomChat-Messages table
    Value: !Sub "https://${APIMessages}.execute-api.us-east-2.amazonaws.com/dev/"
    Export:
      Name: RandomChatAPIURLMessages

  FriendsOutput:
    Description: API URL for Lambda functions dealing with DynamoDB RandomChat-Friends table
    Value: !Sub "https://${APIFriends}.execute-api.us-east-2.amazonaws.com/dev/"
    Export:
      Name: RandomChatAPIURLFriends
